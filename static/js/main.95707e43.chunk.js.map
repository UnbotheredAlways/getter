{"version":3,"sources":["components/login/Login.module.css","components/card/Card.module.css","components/home/Home.module.css","components/card/Card.js","components/home/Home.js","components/login/Login.js","components/verify/verify.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Home","home","currentAccount","href","target","rel","Login","useState","isConnecting","setIsConnecting","detectProvider","provider","window","ethereum","web3","currentProvider","alert","onLoginHandler","a","console","error","request","method","onLogin","login","onClick","button","type","Verify","isConnected","setIsConnected","setCurrentAccount","balance","setBalance","Web3","eth","getAccounts","accounts","length","log","utils","getBalance","accBalanceEth","fromWei","Number","toFixed","onLogout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,wB,oBCAxDD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,wZCOVC,EANF,SAACC,GACZ,OACE,qBAAKC,UAAS,UAAKC,IAAQC,KAAb,YAAqBH,EAAMC,WAAzC,SAAuDD,EAAMI,Y,kBCSlDC,EAVF,SAACL,GACZ,OACE,eAAC,EAAD,CAAMC,UAAWC,IAAQI,KAAzB,UACE,yEACA,4BAAIN,EAAMO,iBACV,mBAAGC,KAAM,eAAeR,EAAMO,eAAgBE,OAAO,SAASC,IAAI,aAAlE,wB,kBCsCSC,EA1CD,SAACX,GACb,MAAwCY,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAiB,WACrB,IAAIC,EAQJ,OAPIC,OAAOC,SACTF,EAAWC,OAAOC,SACTD,OAAOE,KAChBH,EAAWC,OAAOE,KAAKC,gBAEvBH,OAAOI,MAAM,oDAERL,GAGHM,EAAc,uCAAG,4BAAAC,EAAA,2DACfP,EAAWD,KADI,uBAGfC,IAAaC,OAAOC,UACtBM,QAAQC,MACN,yEAGJX,GAAgB,GARG,SASbE,EAASU,QAAQ,CACrBC,OAAQ,wBAVS,OAYnBb,GAAgB,GAZG,OAcrBd,EAAM4B,QAAQZ,GAdO,2CAAH,qDAiBpB,OACE,cAAC,EAAD,CAAMf,UAAWC,IAAQ2B,MAAzB,SACE,yBAAQC,QAASR,EAAgBrB,UAAWC,IAAQ6B,OAAQC,KAAK,SAAjE,WACInB,GAAgB,UACjBA,GAAgB,mB,kBCaVoB,EAhDA,SAACjC,GACZ,MAAsCY,oBAAS,GAA/C,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAA4CvB,mBAAS,MAArD,mBAAOL,EAAP,KAAuB6B,EAAvB,KACA,EAA8BxB,mBAAS,GAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KACA,EAAwB1B,mBAAS,IAAjC,mBAEMgB,GAFN,UAEa,uCAAG,WAAOZ,GAAP,mBAAAO,EAAA,6DACRJ,EAAO,IAAIoB,IAAKvB,GADR,SAESG,EAAKqB,IAAIC,cAFlB,UAGU,KADlBC,EAFQ,QAGDC,OAHC,gBAIZnB,QAAQoB,IAAI,+BAJA,0BAKHF,EAAS,KAAOnC,EALb,wBAMZ6B,EAAkBM,EAAS,IANf,KAOUvB,EAAK0B,MAPf,UAQJ1B,EAAKqB,IAAIM,WAAWJ,EAAS,IARzB,oBAONK,EAPM,KAOqBC,QAPrB,eASV,SAGFV,EAAWW,OAAOF,GAAeG,QAAQ,IACzCf,GAAe,GAbH,4CAAH,uDAqBf,OACE,gCACE,yBAAQlC,UAAU,cAAlB,UACE,sDACA,qBAAKA,UAAU,MAAf,SACE,6BACE,6BACE,mBAAGO,KAAK,IAAR,SAAaD,aAKrB,kCACI2B,GAAe,cAAC,EAAD,CAAON,QAASA,EAASuB,SAjB7B,WACfhB,GAAe,MAiBZD,GACC,cAAC,EAAD,CAAM3B,eAAgBA,EAAgB8B,QAASA,WCtC1Ce,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.95707e43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2zXTa\",\"button\":\"Login_button__oe5B4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3YFFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__25lM4\"};","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Card;","import Card from \"../card/Card\";\r\nimport classes from \"./Home.module.css\";\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <Card className={classes.home}>\r\n      <h1>You can now proceed on the desktop app.</h1>\r\n      <p>{props.currentAccount}</p>\r\n      <a href={'testproto://'+props.currentAccount} target=\"_blank\" rel=\"noreferrer\">Verify</a>\r\n      {/* <p>{props.balance} ETH</p> */}\r\n    </Card>\r\n  );\r\n};\r\nexport default Home;","import { useState } from \"react\";\r\nimport Card from \"../card/Card\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = (props) => {\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  const detectProvider = () => {\r\n    let provider;\r\n    if (window.ethereum) {\r\n      provider = window.ethereum;\r\n    } else if (window.web3) {\r\n      provider = window.web3.currentProvider;\r\n    } else {\r\n      window.alert(\"No Ethereum browser detected! Check out MetaMask\");\r\n    }\r\n    return provider;\r\n  };\r\n\r\n  const onLoginHandler = async () => {\r\n    const provider = detectProvider();\r\n    if (provider) {\r\n      if (provider !== window.ethereum) {\r\n        console.error(\r\n          \"Not window.ethereum provider. Do you have multiple wallet installed ?\"\r\n        );\r\n      }\r\n      setIsConnecting(true);\r\n      await provider.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      setIsConnecting(false);\r\n    }\r\n    props.onLogin(provider);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <button onClick={onLoginHandler} className={classes.button} type=\"button\">\r\n        {!isConnecting && \"Connect\"}\r\n        {isConnecting && \"Loading...\"}\r\n      </button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;","import { useState } from \"react\";\r\nimport Home from \"../home/Home\";\r\nimport Login from \"../login/Login\";\r\nimport Web3 from \"web3\";\r\n\r\nconst Verify = (props) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [currentAccount, setCurrentAccount] = useState(null);\r\n    const [balance, setBalance] = useState(0);\r\n    const [name, setName] = useState(\"\")\r\n  \r\n    const onLogin = async (provider) => {\r\n      const web3 = new Web3(provider);\r\n      const accounts = await web3.eth.getAccounts();\r\n      if (accounts.length === 0) {\r\n        console.log(\"Please connect to MetaMask!\");\r\n      } else if (accounts[0] !== currentAccount) {\r\n        setCurrentAccount(accounts[0]);\r\n        const accBalanceEth = web3.utils.fromWei(\r\n          await web3.eth.getBalance(accounts[0]),\r\n          \"ether\"\r\n        );\r\n  \r\n        setBalance(Number(accBalanceEth).toFixed(6));\r\n        setIsConnected(true);\r\n      }\r\n    };\r\n  \r\n    const onLogout = () => {\r\n      setIsConnected(false);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"main-header\">\r\n        <h1>Account verification</h1>\r\n        <nav className=\"nav\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"/\">{currentAccount}</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        {!isConnected && <Login onLogin={onLogin} onLogout={onLogout} />}\r\n        {isConnected && (\r\n          <Home currentAccount={currentAccount} balance={balance} />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default Verify;","// import {Route, Routes, BrowserRouter as Router} from 'react-router-dom'; \nimport Verify from './components/verify/verify'\n\nfunction App() {\n  return (\n    <Verify/>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}