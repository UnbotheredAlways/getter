{"version":3,"sources":["components/login/Login.module.css","components/card/Card.module.css","components/card/Card.js","components/home/Home.js","components/login/Login.js","components/verify/verify.js","App.js","reportWebVitals.js","index.js","components/home/Home.module.css"],"names":["module","exports","Card","props","className","classes","card","children","Home","useState","signature","setSignature","verifying","setVerifying","e","a","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","currentDate","Date","getAddress","getDate","message","date","signMessage","btoa","JSON","stringify","TempSignature","console","log","home","currentAccount","button","onClick","href","target","rel","Login","isConnecting","setIsConnecting","detectProvider","web3","currentProvider","alert","onLoginHandler","error","request","method","onLogin","login","type","Verify","isConnected","setIsConnected","setCurrentAccount","balance","setBalance","Web3","eth","getAccounts","accounts","length","utils","getBalance","accBalanceEth","fromWei","Number","toFixed","onLogout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d481e621.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2zXTa\",\"button\":\"Login_button__oe5B4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3YFFs\"};","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Card;","import { useState } from \"react\";\r\nimport Card from \"../card/Card\";\r\nimport classes from \"./Home.module.css\";\r\nimport { ethers } from \"ethers\"\r\n\r\nconst Home = (props) => {\r\n  const [signature, setSignature] = useState();\r\n  const [error, setError] = useState();\r\n  const [verifying, setVerifying] = useState();\r\n\r\n\r\n  async function handleSign(e)\r\n  { \r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n    var currentDate = new Date();\r\n\r\n    const message = {signer: await signer.getAddress(), date: currentDate.getDate()}\r\n    \r\n    var TempSignature = await signer.signMessage(btoa(JSON.stringify(message)));\r\n    setSignature(TempSignature);\r\n    console.log(signature)\r\n    const address = await signer.getAddress();\r\n    setVerifying(true)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.home}>\r\n      { !verifying &&  <h1>Sign your wallet. No transaction will be made during the sign.</h1> }\r\n      { verifying &&  <h1>Verify to continue.</h1> }\r\n      <p>{props.currentAccount}</p>\r\n      \r\n      { !verifying && <button className={classes.button} onClick={handleSign}> sign </button>}\r\n      { verifying && <a href={'testproto://'+signature+'//'+props.currentAccount} target=\"_blank\" rel=\"noreferrer\"><button className={classes.button}> Verify </button></a> }\r\n      {/* <p>{props.balance} ETH</p> */}\r\n    </Card>\r\n  );\r\n};\r\nexport default Home;","import { useState } from \"react\";\r\nimport Card from \"../card/Card\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = (props) => {\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  const detectProvider = () => {\r\n    let provider;\r\n    if (window.ethereum) {\r\n      provider = window.ethereum;\r\n    } else if (window.web3) {\r\n      provider = window.web3.currentProvider;\r\n    } else {\r\n      window.alert(\"No Ethereum browser detected! Check out MetaMask\");\r\n    }\r\n    return provider;\r\n  };\r\n\r\n  const onLoginHandler = async () => {\r\n    const provider = detectProvider();\r\n    if (provider) {\r\n      if (provider !== window.ethereum) {\r\n        console.error(\r\n          \"Not window.ethereum provider. Do you have multiple wallet installed ?\"\r\n        );\r\n      }\r\n      setIsConnecting(true);\r\n      await provider.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      setIsConnecting(false);\r\n    }\r\n    props.onLogin(provider);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <button onClick={onLoginHandler} className={classes.button} type=\"button\">\r\n        {!isConnecting && \"Connect\"}\r\n        {isConnecting && \"Loading...\"}\r\n      </button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;","import { useState } from \"react\";\r\nimport Home from \"../home/Home\";\r\nimport Login from \"../login/Login\";\r\nimport Web3 from \"web3\";\r\n\r\nconst Verify = (props) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [currentAccount, setCurrentAccount] = useState(null);\r\n    const [balance, setBalance] = useState(0);\r\n    const [name, setName] = useState(\"\")\r\n  \r\n    const onLogin = async (provider) => {\r\n      const web3 = new Web3(provider);\r\n      const accounts = await web3.eth.getAccounts();\r\n      if (accounts.length === 0) {\r\n        console.log(\"Please connect to MetaMask!\");\r\n      } else if (accounts[0] !== currentAccount) {\r\n        setCurrentAccount(accounts[0]);\r\n        const accBalanceEth = web3.utils.fromWei(\r\n          await web3.eth.getBalance(accounts[0]),\r\n          \"ether\"\r\n        );\r\n  \r\n        setBalance(Number(accBalanceEth).toFixed(6));\r\n        setIsConnected(true);\r\n      }\r\n    };\r\n  \r\n    const onLogout = () => {\r\n      setIsConnected(false);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"main-header\">\r\n        <h1>Account verification</h1>\r\n        <nav className=\"nav\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"/\">{currentAccount}</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        {!isConnected && <Login onLogin={onLogin} onLogout={onLogout} />}\r\n        {isConnected && (\r\n          <Home currentAccount={currentAccount} balance={balance} />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default Verify;","// import {Route, Routes, BrowserRouter as Router} from 'react-router-dom'; \nimport Verify from './components/verify/verify'\n\nfunction App() {\n  return (\n    <Verify/>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__25lM4\",\"button\":\"Home_button__39yiO\"};"],"sourceRoot":""}